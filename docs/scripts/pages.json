[{"name":"BLOCK_LOW_AND_ABOVE","description":"org.example.Threshold.BLOCK_LOW_AND_ABOVE","location":"-gemini-a-p-i/org.example/-threshold/-b-l-o-c-k_-l-o-w_-a-n-d_-a-b-o-v-e/index.html","searchKeys":["BLOCK_LOW_AND_ABOVE","BLOCK_LOW_AND_ABOVE","org.example.Threshold.BLOCK_LOW_AND_ABOVE"]},{"name":"BLOCK_MEDIUM_AND_ABOVE","description":"org.example.Threshold.BLOCK_MEDIUM_AND_ABOVE","location":"-gemini-a-p-i/org.example/-threshold/-b-l-o-c-k_-m-e-d-i-u-m_-a-n-d_-a-b-o-v-e/index.html","searchKeys":["BLOCK_MEDIUM_AND_ABOVE","BLOCK_MEDIUM_AND_ABOVE","org.example.Threshold.BLOCK_MEDIUM_AND_ABOVE"]},{"name":"BLOCK_NONE","description":"org.example.Threshold.BLOCK_NONE","location":"-gemini-a-p-i/org.example/-threshold/-b-l-o-c-k_-n-o-n-e/index.html","searchKeys":["BLOCK_NONE","BLOCK_NONE","org.example.Threshold.BLOCK_NONE"]},{"name":"BLOCK_ONLY_HIGH","description":"org.example.Threshold.BLOCK_ONLY_HIGH","location":"-gemini-a-p-i/org.example/-threshold/-b-l-o-c-k_-o-n-l-y_-h-i-g-h/index.html","searchKeys":["BLOCK_ONLY_HIGH","BLOCK_ONLY_HIGH","org.example.Threshold.BLOCK_ONLY_HIGH"]},{"name":"HARM_BLOCK_THRESHOLD_UNSPECIFIED","description":"org.example.Threshold.HARM_BLOCK_THRESHOLD_UNSPECIFIED","location":"-gemini-a-p-i/org.example/-threshold/-h-a-r-m_-b-l-o-c-k_-t-h-r-e-s-h-o-l-d_-u-n-s-p-e-c-i-f-i-e-d/index.html","searchKeys":["HARM_BLOCK_THRESHOLD_UNSPECIFIED","HARM_BLOCK_THRESHOLD_UNSPECIFIED","org.example.Threshold.HARM_BLOCK_THRESHOLD_UNSPECIFIED"]},{"name":"HARM_CATEGORY_DANGEROUS_CONTENT","description":"org.example.HarmCategory.HARM_CATEGORY_DANGEROUS_CONTENT","location":"-gemini-a-p-i/org.example/-harm-category/-h-a-r-m_-c-a-t-e-g-o-r-y_-d-a-n-g-e-r-o-u-s_-c-o-n-t-e-n-t/index.html","searchKeys":["HARM_CATEGORY_DANGEROUS_CONTENT","HARM_CATEGORY_DANGEROUS_CONTENT","org.example.HarmCategory.HARM_CATEGORY_DANGEROUS_CONTENT"]},{"name":"HARM_CATEGORY_HARASSMENT","description":"org.example.HarmCategory.HARM_CATEGORY_HARASSMENT","location":"-gemini-a-p-i/org.example/-harm-category/-h-a-r-m_-c-a-t-e-g-o-r-y_-h-a-r-a-s-s-m-e-n-t/index.html","searchKeys":["HARM_CATEGORY_HARASSMENT","HARM_CATEGORY_HARASSMENT","org.example.HarmCategory.HARM_CATEGORY_HARASSMENT"]},{"name":"HARM_CATEGORY_HATE_SPEECH","description":"org.example.HarmCategory.HARM_CATEGORY_HATE_SPEECH","location":"-gemini-a-p-i/org.example/-harm-category/-h-a-r-m_-c-a-t-e-g-o-r-y_-h-a-t-e_-s-p-e-e-c-h/index.html","searchKeys":["HARM_CATEGORY_HATE_SPEECH","HARM_CATEGORY_HATE_SPEECH","org.example.HarmCategory.HARM_CATEGORY_HATE_SPEECH"]},{"name":"HARM_CATEGORY_SEXUALLY_EXPLICIT","description":"org.example.HarmCategory.HARM_CATEGORY_SEXUALLY_EXPLICIT","location":"-gemini-a-p-i/org.example/-harm-category/-h-a-r-m_-c-a-t-e-g-o-r-y_-s-e-x-u-a-l-l-y_-e-x-p-l-i-c-i-t/index.html","searchKeys":["HARM_CATEGORY_SEXUALLY_EXPLICIT","HARM_CATEGORY_SEXUALLY_EXPLICIT","org.example.HarmCategory.HARM_CATEGORY_SEXUALLY_EXPLICIT"]},{"name":"class Gemini(apiKey: String)","description":"org.example.Gemini","location":"-gemini-a-p-i/org.example/-gemini/index.html","searchKeys":["Gemini","class Gemini(apiKey: String)","org.example.Gemini"]},{"name":"class ITTest","description":"org.example.ITTest","location":"-gemini-a-p-i/org.example/-i-t-test/index.html","searchKeys":["ITTest","class ITTest","org.example.ITTest"]},{"name":"constructor()","description":"org.example.ITTest.ITTest","location":"-gemini-a-p-i/org.example/-i-t-test/-i-t-test.html","searchKeys":["ITTest","constructor()","org.example.ITTest.ITTest"]},{"name":"constructor(apiKey: String)","description":"org.example.Gemini.Gemini","location":"-gemini-a-p-i/org.example/-gemini/-gemini.html","searchKeys":["Gemini","constructor(apiKey: String)","org.example.Gemini.Gemini"]},{"name":"constructor(candidates: List<Candidate>, promptFeedback: PromptFeedback)","description":"org.example.Response.Response","location":"-gemini-a-p-i/org.example/-response/-response.html","searchKeys":["Response","constructor(candidates: List<Candidate>, promptFeedback: PromptFeedback)","org.example.Response.Response"]},{"name":"constructor(category: HarmCategory, probability: String)","description":"org.example.SafetyRating.SafetyRating","location":"-gemini-a-p-i/org.example/-safety-rating/-safety-rating.html","searchKeys":["SafetyRating","constructor(category: HarmCategory, probability: String)","org.example.SafetyRating.SafetyRating"]},{"name":"constructor(category: HarmCategory, threshold: Threshold)","description":"org.example.SafetySetting.SafetySetting","location":"-gemini-a-p-i/org.example/-safety-setting/-safety-setting.html","searchKeys":["SafetySetting","constructor(category: HarmCategory, threshold: Threshold)","org.example.SafetySetting.SafetySetting"]},{"name":"constructor(content: Content, finishReason: String, index: Int, safetyRatings: List<SafetyRating>)","description":"org.example.Candidate.Candidate","location":"-gemini-a-p-i/org.example/-candidate/-candidate.html","searchKeys":["Candidate","constructor(content: Content, finishReason: String, index: Int, safetyRatings: List<SafetyRating>)","org.example.Candidate.Candidate"]},{"name":"constructor(content: Content, model: String)","description":"org.example.EmbedRequest.EmbedRequest","location":"-gemini-a-p-i/org.example/-embed-request/-embed-request.html","searchKeys":["EmbedRequest","constructor(content: Content, model: String)","org.example.EmbedRequest.EmbedRequest"]},{"name":"constructor(contents: List<Content>, safetySettings: List<SafetySetting> = emptyList(), generationConfig: GenerationConfig? = null)","description":"org.example.ContentRequest.ContentRequest","location":"-gemini-a-p-i/org.example/-content-request/-content-request.html","searchKeys":["ContentRequest","constructor(contents: List<Content>, safetySettings: List<SafetySetting> = emptyList(), generationConfig: GenerationConfig? = null)","org.example.ContentRequest.ContentRequest"]},{"name":"constructor(embedding: Values)","description":"org.example.EmbedResponse.EmbedResponse","location":"-gemini-a-p-i/org.example/-embed-response/-embed-response.html","searchKeys":["EmbedResponse","constructor(embedding: Values)","org.example.EmbedResponse.EmbedResponse"]},{"name":"constructor(embeddings: List<Values>)","description":"org.example.BatchEmbedResponse.BatchEmbedResponse","location":"-gemini-a-p-i/org.example/-batch-embed-response/-batch-embed-response.html","searchKeys":["BatchEmbedResponse","constructor(embeddings: List<Values>)","org.example.BatchEmbedResponse.BatchEmbedResponse"]},{"name":"constructor(mimeType: String, data: String)","description":"org.example.InlineData.InlineData","location":"-gemini-a-p-i/org.example/-inline-data/-inline-data.html","searchKeys":["InlineData","constructor(mimeType: String, data: String)","org.example.InlineData.InlineData"]},{"name":"constructor(models: List<Model>)","description":"org.example.ModelCollection.ModelCollection","location":"-gemini-a-p-i/org.example/-model-collection/-model-collection.html","searchKeys":["ModelCollection","constructor(models: List<Model>)","org.example.ModelCollection.ModelCollection"]},{"name":"constructor(name: String, version: String, displayName: String, description: String, inputTokenLimit: Int, outputTokenLimit: Int, supportedGenerationMethods: List<String>, temperature: Double? = null, topP: Double? = null, topK: Int? = null)","description":"org.example.Model.Model","location":"-gemini-a-p-i/org.example/-model/-model.html","searchKeys":["Model","constructor(name: String, version: String, displayName: String, description: String, inputTokenLimit: Int, outputTokenLimit: Int, supportedGenerationMethods: List<String>, temperature: Double? = null, topP: Double? = null, topK: Int? = null)","org.example.Model.Model"]},{"name":"constructor(parts: List<Part>, role: String? = null)","description":"org.example.Content.Content","location":"-gemini-a-p-i/org.example/-content/-content.html","searchKeys":["Content","constructor(parts: List<Part>, role: String? = null)","org.example.Content.Content"]},{"name":"constructor(requests: List<EmbedRequest>)","description":"org.example.BatchEmbedRequest.BatchEmbedRequest","location":"-gemini-a-p-i/org.example/-batch-embed-request/-batch-embed-request.html","searchKeys":["BatchEmbedRequest","constructor(requests: List<EmbedRequest>)","org.example.BatchEmbedRequest.BatchEmbedRequest"]},{"name":"constructor(safetyRatings: List<SafetyRating>)","description":"org.example.PromptFeedback.PromptFeedback","location":"-gemini-a-p-i/org.example/-prompt-feedback/-prompt-feedback.html","searchKeys":["PromptFeedback","constructor(safetyRatings: List<SafetyRating>)","org.example.PromptFeedback.PromptFeedback"]},{"name":"constructor(stopSequences: List<String>, temperature: Double, maxOutputTokens: Int, topP: Double, topK: Int)","description":"org.example.GenerationConfig.GenerationConfig","location":"-gemini-a-p-i/org.example/-generation-config/-generation-config.html","searchKeys":["GenerationConfig","constructor(stopSequences: List<String>, temperature: Double, maxOutputTokens: Int, topP: Double, topK: Int)","org.example.GenerationConfig.GenerationConfig"]},{"name":"constructor(text: String? = null, inlineData: InlineData? = null)","description":"org.example.Part.Part","location":"-gemini-a-p-i/org.example/-part/-part.html","searchKeys":["Part","constructor(text: String? = null, inlineData: InlineData? = null)","org.example.Part.Part"]},{"name":"constructor(totalTokens: Int)","description":"org.example.TotalTokens.TotalTokens","location":"-gemini-a-p-i/org.example/-total-tokens/-total-tokens.html","searchKeys":["TotalTokens","constructor(totalTokens: Int)","org.example.TotalTokens.TotalTokens"]},{"name":"constructor(values: List<Double>)","description":"org.example.Values.Values","location":"-gemini-a-p-i/org.example/-values/-values.html","searchKeys":["Values","constructor(values: List<Double>)","org.example.Values.Values"]},{"name":"data class BatchEmbedRequest(val requests: List<EmbedRequest>)","description":"org.example.BatchEmbedRequest","location":"-gemini-a-p-i/org.example/-batch-embed-request/index.html","searchKeys":["BatchEmbedRequest","data class BatchEmbedRequest(val requests: List<EmbedRequest>)","org.example.BatchEmbedRequest"]},{"name":"data class BatchEmbedResponse(val embeddings: List<Values>)","description":"org.example.BatchEmbedResponse","location":"-gemini-a-p-i/org.example/-batch-embed-response/index.html","searchKeys":["BatchEmbedResponse","data class BatchEmbedResponse(val embeddings: List<Values>)","org.example.BatchEmbedResponse"]},{"name":"data class Candidate(val content: Content, val finishReason: String, val index: Int, val safetyRatings: List<SafetyRating>)","description":"org.example.Candidate","location":"-gemini-a-p-i/org.example/-candidate/index.html","searchKeys":["Candidate","data class Candidate(val content: Content, val finishReason: String, val index: Int, val safetyRatings: List<SafetyRating>)","org.example.Candidate"]},{"name":"data class Content(val parts: List<Part>, val role: String? = null)","description":"org.example.Content","location":"-gemini-a-p-i/org.example/-content/index.html","searchKeys":["Content","data class Content(val parts: List<Part>, val role: String? = null)","org.example.Content"]},{"name":"data class ContentRequest(val contents: List<Content>, val safetySettings: List<SafetySetting> = emptyList(), val generationConfig: GenerationConfig? = null)","description":"org.example.ContentRequest","location":"-gemini-a-p-i/org.example/-content-request/index.html","searchKeys":["ContentRequest","data class ContentRequest(val contents: List<Content>, val safetySettings: List<SafetySetting> = emptyList(), val generationConfig: GenerationConfig? = null)","org.example.ContentRequest"]},{"name":"data class EmbedRequest(val content: Content, val model: String)","description":"org.example.EmbedRequest","location":"-gemini-a-p-i/org.example/-embed-request/index.html","searchKeys":["EmbedRequest","data class EmbedRequest(val content: Content, val model: String)","org.example.EmbedRequest"]},{"name":"data class EmbedResponse(val embedding: Values)","description":"org.example.EmbedResponse","location":"-gemini-a-p-i/org.example/-embed-response/index.html","searchKeys":["EmbedResponse","data class EmbedResponse(val embedding: Values)","org.example.EmbedResponse"]},{"name":"data class GenerationConfig(val stopSequences: List<String>, val temperature: Double, val maxOutputTokens: Int, val topP: Double, val topK: Int)","description":"org.example.GenerationConfig","location":"-gemini-a-p-i/org.example/-generation-config/index.html","searchKeys":["GenerationConfig","data class GenerationConfig(val stopSequences: List<String>, val temperature: Double, val maxOutputTokens: Int, val topP: Double, val topK: Int)","org.example.GenerationConfig"]},{"name":"data class InlineData(val mimeType: String, val data: String)","description":"org.example.InlineData","location":"-gemini-a-p-i/org.example/-inline-data/index.html","searchKeys":["InlineData","data class InlineData(val mimeType: String, val data: String)","org.example.InlineData"]},{"name":"data class Model(val name: String, val version: String, val displayName: String, val description: String, val inputTokenLimit: Int, val outputTokenLimit: Int, val supportedGenerationMethods: List<String>, val temperature: Double? = null, val topP: Double? = null, val topK: Int? = null)","description":"org.example.Model","location":"-gemini-a-p-i/org.example/-model/index.html","searchKeys":["Model","data class Model(val name: String, val version: String, val displayName: String, val description: String, val inputTokenLimit: Int, val outputTokenLimit: Int, val supportedGenerationMethods: List<String>, val temperature: Double? = null, val topP: Double? = null, val topK: Int? = null)","org.example.Model"]},{"name":"data class ModelCollection(val models: List<Model>)","description":"org.example.ModelCollection","location":"-gemini-a-p-i/org.example/-model-collection/index.html","searchKeys":["ModelCollection","data class ModelCollection(val models: List<Model>)","org.example.ModelCollection"]},{"name":"data class Part(val text: String? = null, val inlineData: InlineData? = null)","description":"org.example.Part","location":"-gemini-a-p-i/org.example/-part/index.html","searchKeys":["Part","data class Part(val text: String? = null, val inlineData: InlineData? = null)","org.example.Part"]},{"name":"data class PromptFeedback(val safetyRatings: List<SafetyRating>)","description":"org.example.PromptFeedback","location":"-gemini-a-p-i/org.example/-prompt-feedback/index.html","searchKeys":["PromptFeedback","data class PromptFeedback(val safetyRatings: List<SafetyRating>)","org.example.PromptFeedback"]},{"name":"data class Response(val candidates: List<Candidate>, val promptFeedback: PromptFeedback)","description":"org.example.Response","location":"-gemini-a-p-i/org.example/-response/index.html","searchKeys":["Response","data class Response(val candidates: List<Candidate>, val promptFeedback: PromptFeedback)","org.example.Response"]},{"name":"data class SafetyRating(val category: HarmCategory, val probability: String)","description":"org.example.SafetyRating","location":"-gemini-a-p-i/org.example/-safety-rating/index.html","searchKeys":["SafetyRating","data class SafetyRating(val category: HarmCategory, val probability: String)","org.example.SafetyRating"]},{"name":"data class SafetySetting(val category: HarmCategory, val threshold: Threshold)","description":"org.example.SafetySetting","location":"-gemini-a-p-i/org.example/-safety-setting/index.html","searchKeys":["SafetySetting","data class SafetySetting(val category: HarmCategory, val threshold: Threshold)","org.example.SafetySetting"]},{"name":"data class TotalTokens(val totalTokens: Int)","description":"org.example.TotalTokens","location":"-gemini-a-p-i/org.example/-total-tokens/index.html","searchKeys":["TotalTokens","data class TotalTokens(val totalTokens: Int)","org.example.TotalTokens"]},{"name":"data class Values(val values: List<Double>)","description":"org.example.Values","location":"-gemini-a-p-i/org.example/-values/index.html","searchKeys":["Values","data class Values(val values: List<Double>)","org.example.Values"]},{"name":"enum HarmCategory : Enum<HarmCategory> ","description":"org.example.HarmCategory","location":"-gemini-a-p-i/org.example/-harm-category/index.html","searchKeys":["HarmCategory","enum HarmCategory : Enum<HarmCategory> ","org.example.HarmCategory"]},{"name":"enum Threshold : Enum<Threshold> ","description":"org.example.Threshold","location":"-gemini-a-p-i/org.example/-threshold/index.html","searchKeys":["Threshold","enum Threshold : Enum<Threshold> ","org.example.Threshold"]},{"name":"fun batchEmbedContents(inputJson: BatchEmbedRequest): BatchEmbedResponse","description":"org.example.Gemini.batchEmbedContents","location":"-gemini-a-p-i/org.example/-gemini/batch-embed-contents.html","searchKeys":["batchEmbedContents","fun batchEmbedContents(inputJson: BatchEmbedRequest): BatchEmbedResponse","org.example.Gemini.batchEmbedContents"]},{"name":"fun countTokens(inputJson: ContentRequest): TotalTokens","description":"org.example.Gemini.countTokens","location":"-gemini-a-p-i/org.example/-gemini/count-tokens.html","searchKeys":["countTokens","fun countTokens(inputJson: ContentRequest): TotalTokens","org.example.Gemini.countTokens"]},{"name":"fun embedContent(inputJson: EmbedRequest): EmbedResponse","description":"org.example.Gemini.embedContent","location":"-gemini-a-p-i/org.example/-gemini/embed-content.html","searchKeys":["embedContent","fun embedContent(inputJson: EmbedRequest): EmbedResponse","org.example.Gemini.embedContent"]},{"name":"fun extract(inputJson: ContentRequest): Response","description":"org.example.Gemini.extract","location":"-gemini-a-p-i/org.example/-gemini/extract.html","searchKeys":["extract","fun extract(inputJson: ContentRequest): Response","org.example.Gemini.extract"]},{"name":"fun extract2(inputJson: ContentRequest): Response","description":"org.example.Gemini.extract2","location":"-gemini-a-p-i/org.example/-gemini/extract2.html","searchKeys":["extract2","fun extract2(inputJson: ContentRequest): Response","org.example.Gemini.extract2"]},{"name":"fun getContent(urlStr: String, inputJson: String? = null): String","description":"org.example.Gemini.getContent","location":"-gemini-a-p-i/org.example/-gemini/get-content.html","searchKeys":["getContent","fun getContent(urlStr: String, inputJson: String? = null): String","org.example.Gemini.getContent"]},{"name":"fun getModels(): ModelCollection","description":"org.example.Gemini.getModels","location":"-gemini-a-p-i/org.example/-gemini/get-models.html","searchKeys":["getModels","fun getModels(): ModelCollection","org.example.Gemini.getModels"]},{"name":"fun main()","description":"org.example.main","location":"-gemini-a-p-i/org.example/main.html","searchKeys":["main","fun main()","org.example.main"]},{"name":"fun valueOf(value: String): HarmCategory","description":"org.example.HarmCategory.valueOf","location":"-gemini-a-p-i/org.example/-harm-category/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): HarmCategory","org.example.HarmCategory.valueOf"]},{"name":"fun valueOf(value: String): Threshold","description":"org.example.Threshold.valueOf","location":"-gemini-a-p-i/org.example/-threshold/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Threshold","org.example.Threshold.valueOf"]},{"name":"fun values(): Array<HarmCategory>","description":"org.example.HarmCategory.values","location":"-gemini-a-p-i/org.example/-harm-category/values.html","searchKeys":["values","fun values(): Array<HarmCategory>","org.example.HarmCategory.values"]},{"name":"fun values(): Array<Threshold>","description":"org.example.Threshold.values","location":"-gemini-a-p-i/org.example/-threshold/values.html","searchKeys":["values","fun values(): Array<Threshold>","org.example.Threshold.values"]},{"name":"val candidates: List<Candidate>","description":"org.example.Response.candidates","location":"-gemini-a-p-i/org.example/-response/candidates.html","searchKeys":["candidates","val candidates: List<Candidate>","org.example.Response.candidates"]},{"name":"val category: HarmCategory","description":"org.example.SafetyRating.category","location":"-gemini-a-p-i/org.example/-safety-rating/category.html","searchKeys":["category","val category: HarmCategory","org.example.SafetyRating.category"]},{"name":"val category: HarmCategory","description":"org.example.SafetySetting.category","location":"-gemini-a-p-i/org.example/-safety-setting/category.html","searchKeys":["category","val category: HarmCategory","org.example.SafetySetting.category"]},{"name":"val content: Content","description":"org.example.Candidate.content","location":"-gemini-a-p-i/org.example/-candidate/content.html","searchKeys":["content","val content: Content","org.example.Candidate.content"]},{"name":"val content: Content","description":"org.example.EmbedRequest.content","location":"-gemini-a-p-i/org.example/-embed-request/content.html","searchKeys":["content","val content: Content","org.example.EmbedRequest.content"]},{"name":"val contents: List<Content>","description":"org.example.ContentRequest.contents","location":"-gemini-a-p-i/org.example/-content-request/contents.html","searchKeys":["contents","val contents: List<Content>","org.example.ContentRequest.contents"]},{"name":"val data: String","description":"org.example.InlineData.data","location":"-gemini-a-p-i/org.example/-inline-data/data.html","searchKeys":["data","val data: String","org.example.InlineData.data"]},{"name":"val description: String","description":"org.example.Model.description","location":"-gemini-a-p-i/org.example/-model/description.html","searchKeys":["description","val description: String","org.example.Model.description"]},{"name":"val displayName: String","description":"org.example.Model.displayName","location":"-gemini-a-p-i/org.example/-model/display-name.html","searchKeys":["displayName","val displayName: String","org.example.Model.displayName"]},{"name":"val embedding: Values","description":"org.example.EmbedResponse.embedding","location":"-gemini-a-p-i/org.example/-embed-response/embedding.html","searchKeys":["embedding","val embedding: Values","org.example.EmbedResponse.embedding"]},{"name":"val embeddings: List<Values>","description":"org.example.BatchEmbedResponse.embeddings","location":"-gemini-a-p-i/org.example/-batch-embed-response/embeddings.html","searchKeys":["embeddings","val embeddings: List<Values>","org.example.BatchEmbedResponse.embeddings"]},{"name":"val entries: EnumEntries<HarmCategory>","description":"org.example.HarmCategory.entries","location":"-gemini-a-p-i/org.example/-harm-category/entries.html","searchKeys":["entries","val entries: EnumEntries<HarmCategory>","org.example.HarmCategory.entries"]},{"name":"val entries: EnumEntries<Threshold>","description":"org.example.Threshold.entries","location":"-gemini-a-p-i/org.example/-threshold/entries.html","searchKeys":["entries","val entries: EnumEntries<Threshold>","org.example.Threshold.entries"]},{"name":"val finishReason: String","description":"org.example.Candidate.finishReason","location":"-gemini-a-p-i/org.example/-candidate/finish-reason.html","searchKeys":["finishReason","val finishReason: String","org.example.Candidate.finishReason"]},{"name":"val generationConfig: GenerationConfig? = null","description":"org.example.ContentRequest.generationConfig","location":"-gemini-a-p-i/org.example/-content-request/generation-config.html","searchKeys":["generationConfig","val generationConfig: GenerationConfig? = null","org.example.ContentRequest.generationConfig"]},{"name":"val index: Int","description":"org.example.Candidate.index","location":"-gemini-a-p-i/org.example/-candidate/--index--.html","searchKeys":["index","val index: Int","org.example.Candidate.index"]},{"name":"val inlineData: InlineData? = null","description":"org.example.Part.inlineData","location":"-gemini-a-p-i/org.example/-part/inline-data.html","searchKeys":["inlineData","val inlineData: InlineData? = null","org.example.Part.inlineData"]},{"name":"val inputTokenLimit: Int","description":"org.example.Model.inputTokenLimit","location":"-gemini-a-p-i/org.example/-model/input-token-limit.html","searchKeys":["inputTokenLimit","val inputTokenLimit: Int","org.example.Model.inputTokenLimit"]},{"name":"val maxOutputTokens: Int","description":"org.example.GenerationConfig.maxOutputTokens","location":"-gemini-a-p-i/org.example/-generation-config/max-output-tokens.html","searchKeys":["maxOutputTokens","val maxOutputTokens: Int","org.example.GenerationConfig.maxOutputTokens"]},{"name":"val mimeType: String","description":"org.example.InlineData.mimeType","location":"-gemini-a-p-i/org.example/-inline-data/mime-type.html","searchKeys":["mimeType","val mimeType: String","org.example.InlineData.mimeType"]},{"name":"val model: String","description":"org.example.EmbedRequest.model","location":"-gemini-a-p-i/org.example/-embed-request/model.html","searchKeys":["model","val model: String","org.example.EmbedRequest.model"]},{"name":"val models: List<Model>","description":"org.example.ModelCollection.models","location":"-gemini-a-p-i/org.example/-model-collection/models.html","searchKeys":["models","val models: List<Model>","org.example.ModelCollection.models"]},{"name":"val name: String","description":"org.example.Model.name","location":"-gemini-a-p-i/org.example/-model/name.html","searchKeys":["name","val name: String","org.example.Model.name"]},{"name":"val outputTokenLimit: Int","description":"org.example.Model.outputTokenLimit","location":"-gemini-a-p-i/org.example/-model/output-token-limit.html","searchKeys":["outputTokenLimit","val outputTokenLimit: Int","org.example.Model.outputTokenLimit"]},{"name":"val parts: List<Part>","description":"org.example.Content.parts","location":"-gemini-a-p-i/org.example/-content/parts.html","searchKeys":["parts","val parts: List<Part>","org.example.Content.parts"]},{"name":"val probability: String","description":"org.example.SafetyRating.probability","location":"-gemini-a-p-i/org.example/-safety-rating/probability.html","searchKeys":["probability","val probability: String","org.example.SafetyRating.probability"]},{"name":"val promptFeedback: PromptFeedback","description":"org.example.Response.promptFeedback","location":"-gemini-a-p-i/org.example/-response/prompt-feedback.html","searchKeys":["promptFeedback","val promptFeedback: PromptFeedback","org.example.Response.promptFeedback"]},{"name":"val requests: List<EmbedRequest>","description":"org.example.BatchEmbedRequest.requests","location":"-gemini-a-p-i/org.example/-batch-embed-request/requests.html","searchKeys":["requests","val requests: List<EmbedRequest>","org.example.BatchEmbedRequest.requests"]},{"name":"val role: String? = null","description":"org.example.Content.role","location":"-gemini-a-p-i/org.example/-content/role.html","searchKeys":["role","val role: String? = null","org.example.Content.role"]},{"name":"val safetyRatings: List<SafetyRating>","description":"org.example.Candidate.safetyRatings","location":"-gemini-a-p-i/org.example/-candidate/safety-ratings.html","searchKeys":["safetyRatings","val safetyRatings: List<SafetyRating>","org.example.Candidate.safetyRatings"]},{"name":"val safetyRatings: List<SafetyRating>","description":"org.example.PromptFeedback.safetyRatings","location":"-gemini-a-p-i/org.example/-prompt-feedback/safety-ratings.html","searchKeys":["safetyRatings","val safetyRatings: List<SafetyRating>","org.example.PromptFeedback.safetyRatings"]},{"name":"val safetySettings: List<SafetySetting>","description":"org.example.ContentRequest.safetySettings","location":"-gemini-a-p-i/org.example/-content-request/safety-settings.html","searchKeys":["safetySettings","val safetySettings: List<SafetySetting>","org.example.ContentRequest.safetySettings"]},{"name":"val stopSequences: List<String>","description":"org.example.GenerationConfig.stopSequences","location":"-gemini-a-p-i/org.example/-generation-config/stop-sequences.html","searchKeys":["stopSequences","val stopSequences: List<String>","org.example.GenerationConfig.stopSequences"]},{"name":"val supportedGenerationMethods: List<String>","description":"org.example.Model.supportedGenerationMethods","location":"-gemini-a-p-i/org.example/-model/supported-generation-methods.html","searchKeys":["supportedGenerationMethods","val supportedGenerationMethods: List<String>","org.example.Model.supportedGenerationMethods"]},{"name":"val temperature: Double","description":"org.example.GenerationConfig.temperature","location":"-gemini-a-p-i/org.example/-generation-config/temperature.html","searchKeys":["temperature","val temperature: Double","org.example.GenerationConfig.temperature"]},{"name":"val temperature: Double? = null","description":"org.example.Model.temperature","location":"-gemini-a-p-i/org.example/-model/temperature.html","searchKeys":["temperature","val temperature: Double? = null","org.example.Model.temperature"]},{"name":"val text: String? = null","description":"org.example.Part.text","location":"-gemini-a-p-i/org.example/-part/text.html","searchKeys":["text","val text: String? = null","org.example.Part.text"]},{"name":"val threshold: Threshold","description":"org.example.SafetySetting.threshold","location":"-gemini-a-p-i/org.example/-safety-setting/threshold.html","searchKeys":["threshold","val threshold: Threshold","org.example.SafetySetting.threshold"]},{"name":"val topK: Int","description":"org.example.GenerationConfig.topK","location":"-gemini-a-p-i/org.example/-generation-config/top-k.html","searchKeys":["topK","val topK: Int","org.example.GenerationConfig.topK"]},{"name":"val topK: Int? = null","description":"org.example.Model.topK","location":"-gemini-a-p-i/org.example/-model/top-k.html","searchKeys":["topK","val topK: Int? = null","org.example.Model.topK"]},{"name":"val topP: Double","description":"org.example.GenerationConfig.topP","location":"-gemini-a-p-i/org.example/-generation-config/top-p.html","searchKeys":["topP","val topP: Double","org.example.GenerationConfig.topP"]},{"name":"val topP: Double? = null","description":"org.example.Model.topP","location":"-gemini-a-p-i/org.example/-model/top-p.html","searchKeys":["topP","val topP: Double? = null","org.example.Model.topP"]},{"name":"val totalTokens: Int","description":"org.example.TotalTokens.totalTokens","location":"-gemini-a-p-i/org.example/-total-tokens/total-tokens.html","searchKeys":["totalTokens","val totalTokens: Int","org.example.TotalTokens.totalTokens"]},{"name":"val values: List<Double>","description":"org.example.Values.values","location":"-gemini-a-p-i/org.example/-values/values.html","searchKeys":["values","val values: List<Double>","org.example.Values.values"]},{"name":"val version: String","description":"org.example.Model.version","location":"-gemini-a-p-i/org.example/-model/version.html","searchKeys":["version","val version: String","org.example.Model.version"]}]
