[{"name":"BLOCK_LOW_AND_ABOVE","description":"io.github.ugaikit.gemini4kt.Threshold.BLOCK_LOW_AND_ABOVE","location":"gemini4kt/io.github.ugaikit.gemini4kt/-threshold/-b-l-o-c-k_-l-o-w_-a-n-d_-a-b-o-v-e/index.html","searchKeys":["BLOCK_LOW_AND_ABOVE","BLOCK_LOW_AND_ABOVE","io.github.ugaikit.gemini4kt.Threshold.BLOCK_LOW_AND_ABOVE"]},{"name":"BLOCK_MEDIUM_AND_ABOVE","description":"io.github.ugaikit.gemini4kt.Threshold.BLOCK_MEDIUM_AND_ABOVE","location":"gemini4kt/io.github.ugaikit.gemini4kt/-threshold/-b-l-o-c-k_-m-e-d-i-u-m_-a-n-d_-a-b-o-v-e/index.html","searchKeys":["BLOCK_MEDIUM_AND_ABOVE","BLOCK_MEDIUM_AND_ABOVE","io.github.ugaikit.gemini4kt.Threshold.BLOCK_MEDIUM_AND_ABOVE"]},{"name":"BLOCK_NONE","description":"io.github.ugaikit.gemini4kt.Threshold.BLOCK_NONE","location":"gemini4kt/io.github.ugaikit.gemini4kt/-threshold/-b-l-o-c-k_-n-o-n-e/index.html","searchKeys":["BLOCK_NONE","BLOCK_NONE","io.github.ugaikit.gemini4kt.Threshold.BLOCK_NONE"]},{"name":"BLOCK_ONLY_HIGH","description":"io.github.ugaikit.gemini4kt.Threshold.BLOCK_ONLY_HIGH","location":"gemini4kt/io.github.ugaikit.gemini4kt/-threshold/-b-l-o-c-k_-o-n-l-y_-h-i-g-h/index.html","searchKeys":["BLOCK_ONLY_HIGH","BLOCK_ONLY_HIGH","io.github.ugaikit.gemini4kt.Threshold.BLOCK_ONLY_HIGH"]},{"name":"CLASSIFICATION","description":"io.github.ugaikit.gemini4kt.TaskType.CLASSIFICATION","location":"gemini4kt/io.github.ugaikit.gemini4kt/-task-type/-c-l-a-s-s-i-f-i-c-a-t-i-o-n/index.html","searchKeys":["CLASSIFICATION","CLASSIFICATION","io.github.ugaikit.gemini4kt.TaskType.CLASSIFICATION"]},{"name":"CLUSTERING","description":"io.github.ugaikit.gemini4kt.TaskType.CLUSTERING","location":"gemini4kt/io.github.ugaikit.gemini4kt/-task-type/-c-l-u-s-t-e-r-i-n-g/index.html","searchKeys":["CLUSTERING","CLUSTERING","io.github.ugaikit.gemini4kt.TaskType.CLUSTERING"]},{"name":"HARM_BLOCK_THRESHOLD_UNSPECIFIED","description":"io.github.ugaikit.gemini4kt.Threshold.HARM_BLOCK_THRESHOLD_UNSPECIFIED","location":"gemini4kt/io.github.ugaikit.gemini4kt/-threshold/-h-a-r-m_-b-l-o-c-k_-t-h-r-e-s-h-o-l-d_-u-n-s-p-e-c-i-f-i-e-d/index.html","searchKeys":["HARM_BLOCK_THRESHOLD_UNSPECIFIED","HARM_BLOCK_THRESHOLD_UNSPECIFIED","io.github.ugaikit.gemini4kt.Threshold.HARM_BLOCK_THRESHOLD_UNSPECIFIED"]},{"name":"HARM_CATEGORY_DANGEROUS_CONTENT","description":"io.github.ugaikit.gemini4kt.HarmCategory.HARM_CATEGORY_DANGEROUS_CONTENT","location":"gemini4kt/io.github.ugaikit.gemini4kt/-harm-category/-h-a-r-m_-c-a-t-e-g-o-r-y_-d-a-n-g-e-r-o-u-s_-c-o-n-t-e-n-t/index.html","searchKeys":["HARM_CATEGORY_DANGEROUS_CONTENT","HARM_CATEGORY_DANGEROUS_CONTENT","io.github.ugaikit.gemini4kt.HarmCategory.HARM_CATEGORY_DANGEROUS_CONTENT"]},{"name":"HARM_CATEGORY_DEROGATORY","description":"io.github.ugaikit.gemini4kt.HarmCategory.HARM_CATEGORY_DEROGATORY","location":"gemini4kt/io.github.ugaikit.gemini4kt/-harm-category/-h-a-r-m_-c-a-t-e-g-o-r-y_-d-e-r-o-g-a-t-o-r-y/index.html","searchKeys":["HARM_CATEGORY_DEROGATORY","HARM_CATEGORY_DEROGATORY","io.github.ugaikit.gemini4kt.HarmCategory.HARM_CATEGORY_DEROGATORY"]},{"name":"HARM_CATEGORY_HARASSMENT","description":"io.github.ugaikit.gemini4kt.HarmCategory.HARM_CATEGORY_HARASSMENT","location":"gemini4kt/io.github.ugaikit.gemini4kt/-harm-category/-h-a-r-m_-c-a-t-e-g-o-r-y_-h-a-r-a-s-s-m-e-n-t/index.html","searchKeys":["HARM_CATEGORY_HARASSMENT","HARM_CATEGORY_HARASSMENT","io.github.ugaikit.gemini4kt.HarmCategory.HARM_CATEGORY_HARASSMENT"]},{"name":"HARM_CATEGORY_HATE_SPEECH","description":"io.github.ugaikit.gemini4kt.HarmCategory.HARM_CATEGORY_HATE_SPEECH","location":"gemini4kt/io.github.ugaikit.gemini4kt/-harm-category/-h-a-r-m_-c-a-t-e-g-o-r-y_-h-a-t-e_-s-p-e-e-c-h/index.html","searchKeys":["HARM_CATEGORY_HATE_SPEECH","HARM_CATEGORY_HATE_SPEECH","io.github.ugaikit.gemini4kt.HarmCategory.HARM_CATEGORY_HATE_SPEECH"]},{"name":"HARM_CATEGORY_MEDICAL","description":"io.github.ugaikit.gemini4kt.HarmCategory.HARM_CATEGORY_MEDICAL","location":"gemini4kt/io.github.ugaikit.gemini4kt/-harm-category/-h-a-r-m_-c-a-t-e-g-o-r-y_-m-e-d-i-c-a-l/index.html","searchKeys":["HARM_CATEGORY_MEDICAL","HARM_CATEGORY_MEDICAL","io.github.ugaikit.gemini4kt.HarmCategory.HARM_CATEGORY_MEDICAL"]},{"name":"HARM_CATEGORY_SEXUAL","description":"io.github.ugaikit.gemini4kt.HarmCategory.HARM_CATEGORY_SEXUAL","location":"gemini4kt/io.github.ugaikit.gemini4kt/-harm-category/-h-a-r-m_-c-a-t-e-g-o-r-y_-s-e-x-u-a-l/index.html","searchKeys":["HARM_CATEGORY_SEXUAL","HARM_CATEGORY_SEXUAL","io.github.ugaikit.gemini4kt.HarmCategory.HARM_CATEGORY_SEXUAL"]},{"name":"HARM_CATEGORY_SEXUALLY_EXPLICIT","description":"io.github.ugaikit.gemini4kt.HarmCategory.HARM_CATEGORY_SEXUALLY_EXPLICIT","location":"gemini4kt/io.github.ugaikit.gemini4kt/-harm-category/-h-a-r-m_-c-a-t-e-g-o-r-y_-s-e-x-u-a-l-l-y_-e-x-p-l-i-c-i-t/index.html","searchKeys":["HARM_CATEGORY_SEXUALLY_EXPLICIT","HARM_CATEGORY_SEXUALLY_EXPLICIT","io.github.ugaikit.gemini4kt.HarmCategory.HARM_CATEGORY_SEXUALLY_EXPLICIT"]},{"name":"HARM_CATEGORY_TOXICITY","description":"io.github.ugaikit.gemini4kt.HarmCategory.HARM_CATEGORY_TOXICITY","location":"gemini4kt/io.github.ugaikit.gemini4kt/-harm-category/-h-a-r-m_-c-a-t-e-g-o-r-y_-t-o-x-i-c-i-t-y/index.html","searchKeys":["HARM_CATEGORY_TOXICITY","HARM_CATEGORY_TOXICITY","io.github.ugaikit.gemini4kt.HarmCategory.HARM_CATEGORY_TOXICITY"]},{"name":"HARM_CATEGORY_UNSPECIFIED","description":"io.github.ugaikit.gemini4kt.HarmCategory.HARM_CATEGORY_UNSPECIFIED","location":"gemini4kt/io.github.ugaikit.gemini4kt/-harm-category/-h-a-r-m_-c-a-t-e-g-o-r-y_-u-n-s-p-e-c-i-f-i-e-d/index.html","searchKeys":["HARM_CATEGORY_UNSPECIFIED","HARM_CATEGORY_UNSPECIFIED","io.github.ugaikit.gemini4kt.HarmCategory.HARM_CATEGORY_UNSPECIFIED"]},{"name":"HARM_CATEGORY_VIOLENCE","description":"io.github.ugaikit.gemini4kt.HarmCategory.HARM_CATEGORY_VIOLENCE","location":"gemini4kt/io.github.ugaikit.gemini4kt/-harm-category/-h-a-r-m_-c-a-t-e-g-o-r-y_-v-i-o-l-e-n-c-e/index.html","searchKeys":["HARM_CATEGORY_VIOLENCE","HARM_CATEGORY_VIOLENCE","io.github.ugaikit.gemini4kt.HarmCategory.HARM_CATEGORY_VIOLENCE"]},{"name":"HARM_PROBABILITY_UNSPECIFIED","description":"io.github.ugaikit.gemini4kt.HarmProbability.HARM_PROBABILITY_UNSPECIFIED","location":"gemini4kt/io.github.ugaikit.gemini4kt/-harm-probability/-h-a-r-m_-p-r-o-b-a-b-i-l-i-t-y_-u-n-s-p-e-c-i-f-i-e-d/index.html","searchKeys":["HARM_PROBABILITY_UNSPECIFIED","HARM_PROBABILITY_UNSPECIFIED","io.github.ugaikit.gemini4kt.HarmProbability.HARM_PROBABILITY_UNSPECIFIED"]},{"name":"HIGH","description":"io.github.ugaikit.gemini4kt.HarmProbability.HIGH","location":"gemini4kt/io.github.ugaikit.gemini4kt/-harm-probability/-h-i-g-h/index.html","searchKeys":["HIGH","HIGH","io.github.ugaikit.gemini4kt.HarmProbability.HIGH"]},{"name":"LOW","description":"io.github.ugaikit.gemini4kt.HarmProbability.LOW","location":"gemini4kt/io.github.ugaikit.gemini4kt/-harm-probability/-l-o-w/index.html","searchKeys":["LOW","LOW","io.github.ugaikit.gemini4kt.HarmProbability.LOW"]},{"name":"MEDIUM","description":"io.github.ugaikit.gemini4kt.HarmProbability.MEDIUM","location":"gemini4kt/io.github.ugaikit.gemini4kt/-harm-probability/-m-e-d-i-u-m/index.html","searchKeys":["MEDIUM","MEDIUM","io.github.ugaikit.gemini4kt.HarmProbability.MEDIUM"]},{"name":"NEGLIGIBLE","description":"io.github.ugaikit.gemini4kt.HarmProbability.NEGLIGIBLE","location":"gemini4kt/io.github.ugaikit.gemini4kt/-harm-probability/-n-e-g-l-i-g-i-b-l-e/index.html","searchKeys":["NEGLIGIBLE","NEGLIGIBLE","io.github.ugaikit.gemini4kt.HarmProbability.NEGLIGIBLE"]},{"name":"RETRIEVAL_DOCUMENT","description":"io.github.ugaikit.gemini4kt.TaskType.RETRIEVAL_DOCUMENT","location":"gemini4kt/io.github.ugaikit.gemini4kt/-task-type/-r-e-t-r-i-e-v-a-l_-d-o-c-u-m-e-n-t/index.html","searchKeys":["RETRIEVAL_DOCUMENT","RETRIEVAL_DOCUMENT","io.github.ugaikit.gemini4kt.TaskType.RETRIEVAL_DOCUMENT"]},{"name":"RETRIEVAL_QUERY","description":"io.github.ugaikit.gemini4kt.TaskType.RETRIEVAL_QUERY","location":"gemini4kt/io.github.ugaikit.gemini4kt/-task-type/-r-e-t-r-i-e-v-a-l_-q-u-e-r-y/index.html","searchKeys":["RETRIEVAL_QUERY","RETRIEVAL_QUERY","io.github.ugaikit.gemini4kt.TaskType.RETRIEVAL_QUERY"]},{"name":"SEMANTIC_SIMILARITY","description":"io.github.ugaikit.gemini4kt.TaskType.SEMANTIC_SIMILARITY","location":"gemini4kt/io.github.ugaikit.gemini4kt/-task-type/-s-e-m-a-n-t-i-c_-s-i-m-i-l-a-r-i-t-y/index.html","searchKeys":["SEMANTIC_SIMILARITY","SEMANTIC_SIMILARITY","io.github.ugaikit.gemini4kt.TaskType.SEMANTIC_SIMILARITY"]},{"name":"TASK_TYPE_UNSPECIFIED","description":"io.github.ugaikit.gemini4kt.TaskType.TASK_TYPE_UNSPECIFIED","location":"gemini4kt/io.github.ugaikit.gemini4kt/-task-type/-t-a-s-k_-t-y-p-e_-u-n-s-p-e-c-i-f-i-e-d/index.html","searchKeys":["TASK_TYPE_UNSPECIFIED","TASK_TYPE_UNSPECIFIED","io.github.ugaikit.gemini4kt.TaskType.TASK_TYPE_UNSPECIFIED"]},{"name":"class Gemini(apiKey: String)","description":"io.github.ugaikit.gemini4kt.Gemini","location":"gemini4kt/io.github.ugaikit.gemini4kt/-gemini/index.html","searchKeys":["Gemini","class Gemini(apiKey: String)","io.github.ugaikit.gemini4kt.Gemini"]},{"name":"class ITTest","description":"io.github.ugaikit.gemini4kt.ITTest","location":"gemini4kt/io.github.ugaikit.gemini4kt/-i-t-test/index.html","searchKeys":["ITTest","class ITTest","io.github.ugaikit.gemini4kt.ITTest"]},{"name":"constructor()","description":"io.github.ugaikit.gemini4kt.ITTest.ITTest","location":"gemini4kt/io.github.ugaikit.gemini4kt/-i-t-test/-i-t-test.html","searchKeys":["ITTest","constructor()","io.github.ugaikit.gemini4kt.ITTest.ITTest"]},{"name":"constructor(apiKey: String)","description":"io.github.ugaikit.gemini4kt.Gemini.Gemini","location":"gemini4kt/io.github.ugaikit.gemini4kt/-gemini/-gemini.html","searchKeys":["Gemini","constructor(apiKey: String)","io.github.ugaikit.gemini4kt.Gemini.Gemini"]},{"name":"constructor(candidates: List<Candidate>, promptFeedback: PromptFeedback)","description":"io.github.ugaikit.gemini4kt.GenerateContentResponse.GenerateContentResponse","location":"gemini4kt/io.github.ugaikit.gemini4kt/-generate-content-response/-generate-content-response.html","searchKeys":["GenerateContentResponse","constructor(candidates: List<Candidate>, promptFeedback: PromptFeedback)","io.github.ugaikit.gemini4kt.GenerateContentResponse.GenerateContentResponse"]},{"name":"constructor(category: HarmCategory, probability: HarmProbability, blocked: Boolean? = null)","description":"io.github.ugaikit.gemini4kt.SafetyRating.SafetyRating","location":"gemini4kt/io.github.ugaikit.gemini4kt/-safety-rating/-safety-rating.html","searchKeys":["SafetyRating","constructor(category: HarmCategory, probability: HarmProbability, blocked: Boolean? = null)","io.github.ugaikit.gemini4kt.SafetyRating.SafetyRating"]},{"name":"constructor(category: HarmCategory, threshold: Threshold)","description":"io.github.ugaikit.gemini4kt.SafetySetting.SafetySetting","location":"gemini4kt/io.github.ugaikit.gemini4kt/-safety-setting/-safety-setting.html","searchKeys":["SafetySetting","constructor(category: HarmCategory, threshold: Threshold)","io.github.ugaikit.gemini4kt.SafetySetting.SafetySetting"]},{"name":"constructor(content: Content, finishReason: String, index: Int, safetyRatings: List<SafetyRating>)","description":"io.github.ugaikit.gemini4kt.Candidate.Candidate","location":"gemini4kt/io.github.ugaikit.gemini4kt/-candidate/-candidate.html","searchKeys":["Candidate","constructor(content: Content, finishReason: String, index: Int, safetyRatings: List<SafetyRating>)","io.github.ugaikit.gemini4kt.Candidate.Candidate"]},{"name":"constructor(content: Content, model: String, taskType: TaskType? = null, title: String? = null)","description":"io.github.ugaikit.gemini4kt.EmbedContentRequest.EmbedContentRequest","location":"gemini4kt/io.github.ugaikit.gemini4kt/-embed-content-request/-embed-content-request.html","searchKeys":["EmbedContentRequest","constructor(content: Content, model: String, taskType: TaskType? = null, title: String? = null)","io.github.ugaikit.gemini4kt.EmbedContentRequest.EmbedContentRequest"]},{"name":"constructor(contents: List<Content>)","description":"io.github.ugaikit.gemini4kt.CountTokensRequest.CountTokensRequest","location":"gemini4kt/io.github.ugaikit.gemini4kt/-count-tokens-request/-count-tokens-request.html","searchKeys":["CountTokensRequest","constructor(contents: List<Content>)","io.github.ugaikit.gemini4kt.CountTokensRequest.CountTokensRequest"]},{"name":"constructor(contents: List<Content>, safetySettings: List<SafetySetting> = emptyList(), generationConfig: GenerationConfig? = null)","description":"io.github.ugaikit.gemini4kt.GenerateContentRequest.GenerateContentRequest","location":"gemini4kt/io.github.ugaikit.gemini4kt/-generate-content-request/-generate-content-request.html","searchKeys":["GenerateContentRequest","constructor(contents: List<Content>, safetySettings: List<SafetySetting> = emptyList(), generationConfig: GenerationConfig? = null)","io.github.ugaikit.gemini4kt.GenerateContentRequest.GenerateContentRequest"]},{"name":"constructor(embedding: Values)","description":"io.github.ugaikit.gemini4kt.EmbedResponse.EmbedResponse","location":"gemini4kt/io.github.ugaikit.gemini4kt/-embed-response/-embed-response.html","searchKeys":["EmbedResponse","constructor(embedding: Values)","io.github.ugaikit.gemini4kt.EmbedResponse.EmbedResponse"]},{"name":"constructor(embeddings: List<Values>)","description":"io.github.ugaikit.gemini4kt.BatchEmbedResponse.BatchEmbedResponse","location":"gemini4kt/io.github.ugaikit.gemini4kt/-batch-embed-response/-batch-embed-response.html","searchKeys":["BatchEmbedResponse","constructor(embeddings: List<Values>)","io.github.ugaikit.gemini4kt.BatchEmbedResponse.BatchEmbedResponse"]},{"name":"constructor(functionDeclaration: List<FunctionDeclaration>)","description":"io.github.ugaikit.gemini4kt.Tools.Tools","location":"gemini4kt/io.github.ugaikit.gemini4kt/-tools/-tools.html","searchKeys":["Tools","constructor(functionDeclaration: List<FunctionDeclaration>)","io.github.ugaikit.gemini4kt.Tools.Tools"]},{"name":"constructor(mimeType: String, data: String)","description":"io.github.ugaikit.gemini4kt.InlineData.InlineData","location":"gemini4kt/io.github.ugaikit.gemini4kt/-inline-data/-inline-data.html","searchKeys":["InlineData","constructor(mimeType: String, data: String)","io.github.ugaikit.gemini4kt.InlineData.InlineData"]},{"name":"constructor(models: List<Model>)","description":"io.github.ugaikit.gemini4kt.ModelCollection.ModelCollection","location":"gemini4kt/io.github.ugaikit.gemini4kt/-model-collection/-model-collection.html","searchKeys":["ModelCollection","constructor(models: List<Model>)","io.github.ugaikit.gemini4kt.ModelCollection.ModelCollection"]},{"name":"constructor(name: String, description: String, parameters: Schema)","description":"io.github.ugaikit.gemini4kt.FunctionDeclaration.FunctionDeclaration","location":"gemini4kt/io.github.ugaikit.gemini4kt/-function-declaration/-function-declaration.html","searchKeys":["FunctionDeclaration","constructor(name: String, description: String, parameters: Schema)","io.github.ugaikit.gemini4kt.FunctionDeclaration.FunctionDeclaration"]},{"name":"constructor(name: String, version: String, displayName: String, description: String, inputTokenLimit: Int, outputTokenLimit: Int, supportedGenerationMethods: List<String>, temperature: Double? = null, topP: Double? = null, topK: Int? = null)","description":"io.github.ugaikit.gemini4kt.Model.Model","location":"gemini4kt/io.github.ugaikit.gemini4kt/-model/-model.html","searchKeys":["Model","constructor(name: String, version: String, displayName: String, description: String, inputTokenLimit: Int, outputTokenLimit: Int, supportedGenerationMethods: List<String>, temperature: Double? = null, topP: Double? = null, topK: Int? = null)","io.github.ugaikit.gemini4kt.Model.Model"]},{"name":"constructor(parts: List<Part>, role: String? = null)","description":"io.github.ugaikit.gemini4kt.Content.Content","location":"gemini4kt/io.github.ugaikit.gemini4kt/-content/-content.html","searchKeys":["Content","constructor(parts: List<Part>, role: String? = null)","io.github.ugaikit.gemini4kt.Content.Content"]},{"name":"constructor(requests: List<EmbedContentRequest>)","description":"io.github.ugaikit.gemini4kt.BatchEmbedRequest.BatchEmbedRequest","location":"gemini4kt/io.github.ugaikit.gemini4kt/-batch-embed-request/-batch-embed-request.html","searchKeys":["BatchEmbedRequest","constructor(requests: List<EmbedContentRequest>)","io.github.ugaikit.gemini4kt.BatchEmbedRequest.BatchEmbedRequest"]},{"name":"constructor(safetyRatings: List<SafetyRating>)","description":"io.github.ugaikit.gemini4kt.PromptFeedback.PromptFeedback","location":"gemini4kt/io.github.ugaikit.gemini4kt/-prompt-feedback/-prompt-feedback.html","searchKeys":["PromptFeedback","constructor(safetyRatings: List<SafetyRating>)","io.github.ugaikit.gemini4kt.PromptFeedback.PromptFeedback"]},{"name":"constructor(stopSequences: List<String>, temperature: Double, maxOutputTokens: Int, topP: Double, topK: Int)","description":"io.github.ugaikit.gemini4kt.GenerationConfig.GenerationConfig","location":"gemini4kt/io.github.ugaikit.gemini4kt/-generation-config/-generation-config.html","searchKeys":["GenerationConfig","constructor(stopSequences: List<String>, temperature: Double, maxOutputTokens: Int, topP: Double, topK: Int)","io.github.ugaikit.gemini4kt.GenerationConfig.GenerationConfig"]},{"name":"constructor(text: String? = null, inlineData: InlineData? = null)","description":"io.github.ugaikit.gemini4kt.Part.Part","location":"gemini4kt/io.github.ugaikit.gemini4kt/-part/-part.html","searchKeys":["Part","constructor(text: String? = null, inlineData: InlineData? = null)","io.github.ugaikit.gemini4kt.Part.Part"]},{"name":"constructor(totalTokens: Int)","description":"io.github.ugaikit.gemini4kt.TotalTokens.TotalTokens","location":"gemini4kt/io.github.ugaikit.gemini4kt/-total-tokens/-total-tokens.html","searchKeys":["TotalTokens","constructor(totalTokens: Int)","io.github.ugaikit.gemini4kt.TotalTokens.TotalTokens"]},{"name":"constructor(type: String, format: String, description: String, nullable: Boolean, enum: List<String>, properties: Map<String, Schema>, required: List<String>, items: Schema)","description":"io.github.ugaikit.gemini4kt.Schema.Schema","location":"gemini4kt/io.github.ugaikit.gemini4kt/-schema/-schema.html","searchKeys":["Schema","constructor(type: String, format: String, description: String, nullable: Boolean, enum: List<String>, properties: Map<String, Schema>, required: List<String>, items: Schema)","io.github.ugaikit.gemini4kt.Schema.Schema"]},{"name":"constructor(values: List<Double>)","description":"io.github.ugaikit.gemini4kt.Values.Values","location":"gemini4kt/io.github.ugaikit.gemini4kt/-values/-values.html","searchKeys":["Values","constructor(values: List<Double>)","io.github.ugaikit.gemini4kt.Values.Values"]},{"name":"data class BatchEmbedRequest(val requests: List<EmbedContentRequest>)","description":"io.github.ugaikit.gemini4kt.BatchEmbedRequest","location":"gemini4kt/io.github.ugaikit.gemini4kt/-batch-embed-request/index.html","searchKeys":["BatchEmbedRequest","data class BatchEmbedRequest(val requests: List<EmbedContentRequest>)","io.github.ugaikit.gemini4kt.BatchEmbedRequest"]},{"name":"data class BatchEmbedResponse(val embeddings: List<Values>)","description":"io.github.ugaikit.gemini4kt.BatchEmbedResponse","location":"gemini4kt/io.github.ugaikit.gemini4kt/-batch-embed-response/index.html","searchKeys":["BatchEmbedResponse","data class BatchEmbedResponse(val embeddings: List<Values>)","io.github.ugaikit.gemini4kt.BatchEmbedResponse"]},{"name":"data class Candidate(val content: Content, val finishReason: String, val index: Int, val safetyRatings: List<SafetyRating>)","description":"io.github.ugaikit.gemini4kt.Candidate","location":"gemini4kt/io.github.ugaikit.gemini4kt/-candidate/index.html","searchKeys":["Candidate","data class Candidate(val content: Content, val finishReason: String, val index: Int, val safetyRatings: List<SafetyRating>)","io.github.ugaikit.gemini4kt.Candidate"]},{"name":"data class Content(val parts: List<Part>, val role: String? = null)","description":"io.github.ugaikit.gemini4kt.Content","location":"gemini4kt/io.github.ugaikit.gemini4kt/-content/index.html","searchKeys":["Content","data class Content(val parts: List<Part>, val role: String? = null)","io.github.ugaikit.gemini4kt.Content"]},{"name":"data class CountTokensRequest(val contents: List<Content>)","description":"io.github.ugaikit.gemini4kt.CountTokensRequest","location":"gemini4kt/io.github.ugaikit.gemini4kt/-count-tokens-request/index.html","searchKeys":["CountTokensRequest","data class CountTokensRequest(val contents: List<Content>)","io.github.ugaikit.gemini4kt.CountTokensRequest"]},{"name":"data class EmbedContentRequest(val content: Content, val model: String, val taskType: TaskType? = null, val title: String? = null)","description":"io.github.ugaikit.gemini4kt.EmbedContentRequest","location":"gemini4kt/io.github.ugaikit.gemini4kt/-embed-content-request/index.html","searchKeys":["EmbedContentRequest","data class EmbedContentRequest(val content: Content, val model: String, val taskType: TaskType? = null, val title: String? = null)","io.github.ugaikit.gemini4kt.EmbedContentRequest"]},{"name":"data class EmbedResponse(val embedding: Values)","description":"io.github.ugaikit.gemini4kt.EmbedResponse","location":"gemini4kt/io.github.ugaikit.gemini4kt/-embed-response/index.html","searchKeys":["EmbedResponse","data class EmbedResponse(val embedding: Values)","io.github.ugaikit.gemini4kt.EmbedResponse"]},{"name":"data class FunctionDeclaration(val name: String, val description: String, val parameters: Schema)","description":"io.github.ugaikit.gemini4kt.FunctionDeclaration","location":"gemini4kt/io.github.ugaikit.gemini4kt/-function-declaration/index.html","searchKeys":["FunctionDeclaration","data class FunctionDeclaration(val name: String, val description: String, val parameters: Schema)","io.github.ugaikit.gemini4kt.FunctionDeclaration"]},{"name":"data class GenerateContentRequest(val contents: List<Content>, val safetySettings: List<SafetySetting> = emptyList(), val generationConfig: GenerationConfig? = null)","description":"io.github.ugaikit.gemini4kt.GenerateContentRequest","location":"gemini4kt/io.github.ugaikit.gemini4kt/-generate-content-request/index.html","searchKeys":["GenerateContentRequest","data class GenerateContentRequest(val contents: List<Content>, val safetySettings: List<SafetySetting> = emptyList(), val generationConfig: GenerationConfig? = null)","io.github.ugaikit.gemini4kt.GenerateContentRequest"]},{"name":"data class GenerateContentResponse(val candidates: List<Candidate>, val promptFeedback: PromptFeedback)","description":"io.github.ugaikit.gemini4kt.GenerateContentResponse","location":"gemini4kt/io.github.ugaikit.gemini4kt/-generate-content-response/index.html","searchKeys":["GenerateContentResponse","data class GenerateContentResponse(val candidates: List<Candidate>, val promptFeedback: PromptFeedback)","io.github.ugaikit.gemini4kt.GenerateContentResponse"]},{"name":"data class GenerationConfig(val stopSequences: List<String>, val temperature: Double, val maxOutputTokens: Int, val topP: Double, val topK: Int)","description":"io.github.ugaikit.gemini4kt.GenerationConfig","location":"gemini4kt/io.github.ugaikit.gemini4kt/-generation-config/index.html","searchKeys":["GenerationConfig","data class GenerationConfig(val stopSequences: List<String>, val temperature: Double, val maxOutputTokens: Int, val topP: Double, val topK: Int)","io.github.ugaikit.gemini4kt.GenerationConfig"]},{"name":"data class InlineData(val mimeType: String, val data: String)","description":"io.github.ugaikit.gemini4kt.InlineData","location":"gemini4kt/io.github.ugaikit.gemini4kt/-inline-data/index.html","searchKeys":["InlineData","data class InlineData(val mimeType: String, val data: String)","io.github.ugaikit.gemini4kt.InlineData"]},{"name":"data class Model(val name: String, val version: String, val displayName: String, val description: String, val inputTokenLimit: Int, val outputTokenLimit: Int, val supportedGenerationMethods: List<String>, val temperature: Double? = null, val topP: Double? = null, val topK: Int? = null)","description":"io.github.ugaikit.gemini4kt.Model","location":"gemini4kt/io.github.ugaikit.gemini4kt/-model/index.html","searchKeys":["Model","data class Model(val name: String, val version: String, val displayName: String, val description: String, val inputTokenLimit: Int, val outputTokenLimit: Int, val supportedGenerationMethods: List<String>, val temperature: Double? = null, val topP: Double? = null, val topK: Int? = null)","io.github.ugaikit.gemini4kt.Model"]},{"name":"data class ModelCollection(val models: List<Model>)","description":"io.github.ugaikit.gemini4kt.ModelCollection","location":"gemini4kt/io.github.ugaikit.gemini4kt/-model-collection/index.html","searchKeys":["ModelCollection","data class ModelCollection(val models: List<Model>)","io.github.ugaikit.gemini4kt.ModelCollection"]},{"name":"data class Part(val text: String? = null, val inlineData: InlineData? = null)","description":"io.github.ugaikit.gemini4kt.Part","location":"gemini4kt/io.github.ugaikit.gemini4kt/-part/index.html","searchKeys":["Part","data class Part(val text: String? = null, val inlineData: InlineData? = null)","io.github.ugaikit.gemini4kt.Part"]},{"name":"data class PromptFeedback(val safetyRatings: List<SafetyRating>)","description":"io.github.ugaikit.gemini4kt.PromptFeedback","location":"gemini4kt/io.github.ugaikit.gemini4kt/-prompt-feedback/index.html","searchKeys":["PromptFeedback","data class PromptFeedback(val safetyRatings: List<SafetyRating>)","io.github.ugaikit.gemini4kt.PromptFeedback"]},{"name":"data class SafetyRating(val category: HarmCategory, val probability: HarmProbability, val blocked: Boolean? = null)","description":"io.github.ugaikit.gemini4kt.SafetyRating","location":"gemini4kt/io.github.ugaikit.gemini4kt/-safety-rating/index.html","searchKeys":["SafetyRating","data class SafetyRating(val category: HarmCategory, val probability: HarmProbability, val blocked: Boolean? = null)","io.github.ugaikit.gemini4kt.SafetyRating"]},{"name":"data class SafetySetting(val category: HarmCategory, val threshold: Threshold)","description":"io.github.ugaikit.gemini4kt.SafetySetting","location":"gemini4kt/io.github.ugaikit.gemini4kt/-safety-setting/index.html","searchKeys":["SafetySetting","data class SafetySetting(val category: HarmCategory, val threshold: Threshold)","io.github.ugaikit.gemini4kt.SafetySetting"]},{"name":"data class Schema(val type: String, val format: String, val description: String, val nullable: Boolean, val enum: List<String>, val properties: Map<String, Schema>, val required: List<String>, val items: Schema)","description":"io.github.ugaikit.gemini4kt.Schema","location":"gemini4kt/io.github.ugaikit.gemini4kt/-schema/index.html","searchKeys":["Schema","data class Schema(val type: String, val format: String, val description: String, val nullable: Boolean, val enum: List<String>, val properties: Map<String, Schema>, val required: List<String>, val items: Schema)","io.github.ugaikit.gemini4kt.Schema"]},{"name":"data class Tools(val functionDeclaration: List<FunctionDeclaration>)","description":"io.github.ugaikit.gemini4kt.Tools","location":"gemini4kt/io.github.ugaikit.gemini4kt/-tools/index.html","searchKeys":["Tools","data class Tools(val functionDeclaration: List<FunctionDeclaration>)","io.github.ugaikit.gemini4kt.Tools"]},{"name":"data class TotalTokens(val totalTokens: Int)","description":"io.github.ugaikit.gemini4kt.TotalTokens","location":"gemini4kt/io.github.ugaikit.gemini4kt/-total-tokens/index.html","searchKeys":["TotalTokens","data class TotalTokens(val totalTokens: Int)","io.github.ugaikit.gemini4kt.TotalTokens"]},{"name":"data class Values(val values: List<Double>)","description":"io.github.ugaikit.gemini4kt.Values","location":"gemini4kt/io.github.ugaikit.gemini4kt/-values/index.html","searchKeys":["Values","data class Values(val values: List<Double>)","io.github.ugaikit.gemini4kt.Values"]},{"name":"enum HarmCategory : Enum<HarmCategory> ","description":"io.github.ugaikit.gemini4kt.HarmCategory","location":"gemini4kt/io.github.ugaikit.gemini4kt/-harm-category/index.html","searchKeys":["HarmCategory","enum HarmCategory : Enum<HarmCategory> ","io.github.ugaikit.gemini4kt.HarmCategory"]},{"name":"enum HarmProbability : Enum<HarmProbability> ","description":"io.github.ugaikit.gemini4kt.HarmProbability","location":"gemini4kt/io.github.ugaikit.gemini4kt/-harm-probability/index.html","searchKeys":["HarmProbability","enum HarmProbability : Enum<HarmProbability> ","io.github.ugaikit.gemini4kt.HarmProbability"]},{"name":"enum TaskType : Enum<TaskType> ","description":"io.github.ugaikit.gemini4kt.TaskType","location":"gemini4kt/io.github.ugaikit.gemini4kt/-task-type/index.html","searchKeys":["TaskType","enum TaskType : Enum<TaskType> ","io.github.ugaikit.gemini4kt.TaskType"]},{"name":"enum Threshold : Enum<Threshold> ","description":"io.github.ugaikit.gemini4kt.Threshold","location":"gemini4kt/io.github.ugaikit.gemini4kt/-threshold/index.html","searchKeys":["Threshold","enum Threshold : Enum<Threshold> ","io.github.ugaikit.gemini4kt.Threshold"]},{"name":"fun batchEmbedContents(inputJson: BatchEmbedRequest, model: String = \"embedding-001\"): BatchEmbedResponse","description":"io.github.ugaikit.gemini4kt.Gemini.batchEmbedContents","location":"gemini4kt/io.github.ugaikit.gemini4kt/-gemini/batch-embed-contents.html","searchKeys":["batchEmbedContents","fun batchEmbedContents(inputJson: BatchEmbedRequest, model: String = \"embedding-001\"): BatchEmbedResponse","io.github.ugaikit.gemini4kt.Gemini.batchEmbedContents"]},{"name":"fun countTokens(inputJson: CountTokensRequest, model: String = \"gemini-pro\"): TotalTokens","description":"io.github.ugaikit.gemini4kt.Gemini.countTokens","location":"gemini4kt/io.github.ugaikit.gemini4kt/-gemini/count-tokens.html","searchKeys":["countTokens","fun countTokens(inputJson: CountTokensRequest, model: String = \"gemini-pro\"): TotalTokens","io.github.ugaikit.gemini4kt.Gemini.countTokens"]},{"name":"fun embedContent(inputJson: EmbedContentRequest, model: String = \"embedding-001\"): EmbedResponse","description":"io.github.ugaikit.gemini4kt.Gemini.embedContent","location":"gemini4kt/io.github.ugaikit.gemini4kt/-gemini/embed-content.html","searchKeys":["embedContent","fun embedContent(inputJson: EmbedContentRequest, model: String = \"embedding-001\"): EmbedResponse","io.github.ugaikit.gemini4kt.Gemini.embedContent"]},{"name":"fun generateContent(inputJson: GenerateContentRequest, model: String = \"gemini-pro\"): GenerateContentResponse","description":"io.github.ugaikit.gemini4kt.Gemini.generateContent","location":"gemini4kt/io.github.ugaikit.gemini4kt/-gemini/generate-content.html","searchKeys":["generateContent","fun generateContent(inputJson: GenerateContentRequest, model: String = \"gemini-pro\"): GenerateContentResponse","io.github.ugaikit.gemini4kt.Gemini.generateContent"]},{"name":"fun getContent(urlStr: String, inputJson: String? = null): String","description":"io.github.ugaikit.gemini4kt.Gemini.getContent","location":"gemini4kt/io.github.ugaikit.gemini4kt/-gemini/get-content.html","searchKeys":["getContent","fun getContent(urlStr: String, inputJson: String? = null): String","io.github.ugaikit.gemini4kt.Gemini.getContent"]},{"name":"fun getModels(): ModelCollection","description":"io.github.ugaikit.gemini4kt.Gemini.getModels","location":"gemini4kt/io.github.ugaikit.gemini4kt/-gemini/get-models.html","searchKeys":["getModels","fun getModels(): ModelCollection","io.github.ugaikit.gemini4kt.Gemini.getModels"]},{"name":"fun main()","description":"io.github.ugaikit.gemini4kt.main","location":"gemini4kt/io.github.ugaikit.gemini4kt/main.html","searchKeys":["main","fun main()","io.github.ugaikit.gemini4kt.main"]},{"name":"fun valueOf(value: String): HarmCategory","description":"io.github.ugaikit.gemini4kt.HarmCategory.valueOf","location":"gemini4kt/io.github.ugaikit.gemini4kt/-harm-category/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): HarmCategory","io.github.ugaikit.gemini4kt.HarmCategory.valueOf"]},{"name":"fun valueOf(value: String): HarmProbability","description":"io.github.ugaikit.gemini4kt.HarmProbability.valueOf","location":"gemini4kt/io.github.ugaikit.gemini4kt/-harm-probability/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): HarmProbability","io.github.ugaikit.gemini4kt.HarmProbability.valueOf"]},{"name":"fun valueOf(value: String): TaskType","description":"io.github.ugaikit.gemini4kt.TaskType.valueOf","location":"gemini4kt/io.github.ugaikit.gemini4kt/-task-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): TaskType","io.github.ugaikit.gemini4kt.TaskType.valueOf"]},{"name":"fun valueOf(value: String): Threshold","description":"io.github.ugaikit.gemini4kt.Threshold.valueOf","location":"gemini4kt/io.github.ugaikit.gemini4kt/-threshold/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Threshold","io.github.ugaikit.gemini4kt.Threshold.valueOf"]},{"name":"fun values(): Array<HarmCategory>","description":"io.github.ugaikit.gemini4kt.HarmCategory.values","location":"gemini4kt/io.github.ugaikit.gemini4kt/-harm-category/values.html","searchKeys":["values","fun values(): Array<HarmCategory>","io.github.ugaikit.gemini4kt.HarmCategory.values"]},{"name":"fun values(): Array<HarmProbability>","description":"io.github.ugaikit.gemini4kt.HarmProbability.values","location":"gemini4kt/io.github.ugaikit.gemini4kt/-harm-probability/values.html","searchKeys":["values","fun values(): Array<HarmProbability>","io.github.ugaikit.gemini4kt.HarmProbability.values"]},{"name":"fun values(): Array<TaskType>","description":"io.github.ugaikit.gemini4kt.TaskType.values","location":"gemini4kt/io.github.ugaikit.gemini4kt/-task-type/values.html","searchKeys":["values","fun values(): Array<TaskType>","io.github.ugaikit.gemini4kt.TaskType.values"]},{"name":"fun values(): Array<Threshold>","description":"io.github.ugaikit.gemini4kt.Threshold.values","location":"gemini4kt/io.github.ugaikit.gemini4kt/-threshold/values.html","searchKeys":["values","fun values(): Array<Threshold>","io.github.ugaikit.gemini4kt.Threshold.values"]},{"name":"val blocked: Boolean? = null","description":"io.github.ugaikit.gemini4kt.SafetyRating.blocked","location":"gemini4kt/io.github.ugaikit.gemini4kt/-safety-rating/blocked.html","searchKeys":["blocked","val blocked: Boolean? = null","io.github.ugaikit.gemini4kt.SafetyRating.blocked"]},{"name":"val candidates: List<Candidate>","description":"io.github.ugaikit.gemini4kt.GenerateContentResponse.candidates","location":"gemini4kt/io.github.ugaikit.gemini4kt/-generate-content-response/candidates.html","searchKeys":["candidates","val candidates: List<Candidate>","io.github.ugaikit.gemini4kt.GenerateContentResponse.candidates"]},{"name":"val category: HarmCategory","description":"io.github.ugaikit.gemini4kt.SafetyRating.category","location":"gemini4kt/io.github.ugaikit.gemini4kt/-safety-rating/category.html","searchKeys":["category","val category: HarmCategory","io.github.ugaikit.gemini4kt.SafetyRating.category"]},{"name":"val category: HarmCategory","description":"io.github.ugaikit.gemini4kt.SafetySetting.category","location":"gemini4kt/io.github.ugaikit.gemini4kt/-safety-setting/category.html","searchKeys":["category","val category: HarmCategory","io.github.ugaikit.gemini4kt.SafetySetting.category"]},{"name":"val content: Content","description":"io.github.ugaikit.gemini4kt.Candidate.content","location":"gemini4kt/io.github.ugaikit.gemini4kt/-candidate/content.html","searchKeys":["content","val content: Content","io.github.ugaikit.gemini4kt.Candidate.content"]},{"name":"val content: Content","description":"io.github.ugaikit.gemini4kt.EmbedContentRequest.content","location":"gemini4kt/io.github.ugaikit.gemini4kt/-embed-content-request/content.html","searchKeys":["content","val content: Content","io.github.ugaikit.gemini4kt.EmbedContentRequest.content"]},{"name":"val contents: List<Content>","description":"io.github.ugaikit.gemini4kt.CountTokensRequest.contents","location":"gemini4kt/io.github.ugaikit.gemini4kt/-count-tokens-request/contents.html","searchKeys":["contents","val contents: List<Content>","io.github.ugaikit.gemini4kt.CountTokensRequest.contents"]},{"name":"val contents: List<Content>","description":"io.github.ugaikit.gemini4kt.GenerateContentRequest.contents","location":"gemini4kt/io.github.ugaikit.gemini4kt/-generate-content-request/contents.html","searchKeys":["contents","val contents: List<Content>","io.github.ugaikit.gemini4kt.GenerateContentRequest.contents"]},{"name":"val data: String","description":"io.github.ugaikit.gemini4kt.InlineData.data","location":"gemini4kt/io.github.ugaikit.gemini4kt/-inline-data/data.html","searchKeys":["data","val data: String","io.github.ugaikit.gemini4kt.InlineData.data"]},{"name":"val description: String","description":"io.github.ugaikit.gemini4kt.FunctionDeclaration.description","location":"gemini4kt/io.github.ugaikit.gemini4kt/-function-declaration/description.html","searchKeys":["description","val description: String","io.github.ugaikit.gemini4kt.FunctionDeclaration.description"]},{"name":"val description: String","description":"io.github.ugaikit.gemini4kt.Model.description","location":"gemini4kt/io.github.ugaikit.gemini4kt/-model/description.html","searchKeys":["description","val description: String","io.github.ugaikit.gemini4kt.Model.description"]},{"name":"val description: String","description":"io.github.ugaikit.gemini4kt.Schema.description","location":"gemini4kt/io.github.ugaikit.gemini4kt/-schema/description.html","searchKeys":["description","val description: String","io.github.ugaikit.gemini4kt.Schema.description"]},{"name":"val displayName: String","description":"io.github.ugaikit.gemini4kt.Model.displayName","location":"gemini4kt/io.github.ugaikit.gemini4kt/-model/display-name.html","searchKeys":["displayName","val displayName: String","io.github.ugaikit.gemini4kt.Model.displayName"]},{"name":"val embedding: Values","description":"io.github.ugaikit.gemini4kt.EmbedResponse.embedding","location":"gemini4kt/io.github.ugaikit.gemini4kt/-embed-response/embedding.html","searchKeys":["embedding","val embedding: Values","io.github.ugaikit.gemini4kt.EmbedResponse.embedding"]},{"name":"val embeddings: List<Values>","description":"io.github.ugaikit.gemini4kt.BatchEmbedResponse.embeddings","location":"gemini4kt/io.github.ugaikit.gemini4kt/-batch-embed-response/embeddings.html","searchKeys":["embeddings","val embeddings: List<Values>","io.github.ugaikit.gemini4kt.BatchEmbedResponse.embeddings"]},{"name":"val entries: EnumEntries<HarmCategory>","description":"io.github.ugaikit.gemini4kt.HarmCategory.entries","location":"gemini4kt/io.github.ugaikit.gemini4kt/-harm-category/entries.html","searchKeys":["entries","val entries: EnumEntries<HarmCategory>","io.github.ugaikit.gemini4kt.HarmCategory.entries"]},{"name":"val entries: EnumEntries<HarmProbability>","description":"io.github.ugaikit.gemini4kt.HarmProbability.entries","location":"gemini4kt/io.github.ugaikit.gemini4kt/-harm-probability/entries.html","searchKeys":["entries","val entries: EnumEntries<HarmProbability>","io.github.ugaikit.gemini4kt.HarmProbability.entries"]},{"name":"val entries: EnumEntries<TaskType>","description":"io.github.ugaikit.gemini4kt.TaskType.entries","location":"gemini4kt/io.github.ugaikit.gemini4kt/-task-type/entries.html","searchKeys":["entries","val entries: EnumEntries<TaskType>","io.github.ugaikit.gemini4kt.TaskType.entries"]},{"name":"val entries: EnumEntries<Threshold>","description":"io.github.ugaikit.gemini4kt.Threshold.entries","location":"gemini4kt/io.github.ugaikit.gemini4kt/-threshold/entries.html","searchKeys":["entries","val entries: EnumEntries<Threshold>","io.github.ugaikit.gemini4kt.Threshold.entries"]},{"name":"val enum: List<String>","description":"io.github.ugaikit.gemini4kt.Schema.enum","location":"gemini4kt/io.github.ugaikit.gemini4kt/-schema/enum.html","searchKeys":["enum","val enum: List<String>","io.github.ugaikit.gemini4kt.Schema.enum"]},{"name":"val finishReason: String","description":"io.github.ugaikit.gemini4kt.Candidate.finishReason","location":"gemini4kt/io.github.ugaikit.gemini4kt/-candidate/finish-reason.html","searchKeys":["finishReason","val finishReason: String","io.github.ugaikit.gemini4kt.Candidate.finishReason"]},{"name":"val format: String","description":"io.github.ugaikit.gemini4kt.Schema.format","location":"gemini4kt/io.github.ugaikit.gemini4kt/-schema/format.html","searchKeys":["format","val format: String","io.github.ugaikit.gemini4kt.Schema.format"]},{"name":"val functionDeclaration: List<FunctionDeclaration>","description":"io.github.ugaikit.gemini4kt.Tools.functionDeclaration","location":"gemini4kt/io.github.ugaikit.gemini4kt/-tools/function-declaration.html","searchKeys":["functionDeclaration","val functionDeclaration: List<FunctionDeclaration>","io.github.ugaikit.gemini4kt.Tools.functionDeclaration"]},{"name":"val generationConfig: GenerationConfig? = null","description":"io.github.ugaikit.gemini4kt.GenerateContentRequest.generationConfig","location":"gemini4kt/io.github.ugaikit.gemini4kt/-generate-content-request/generation-config.html","searchKeys":["generationConfig","val generationConfig: GenerationConfig? = null","io.github.ugaikit.gemini4kt.GenerateContentRequest.generationConfig"]},{"name":"val index: Int","description":"io.github.ugaikit.gemini4kt.Candidate.index","location":"gemini4kt/io.github.ugaikit.gemini4kt/-candidate/--index--.html","searchKeys":["index","val index: Int","io.github.ugaikit.gemini4kt.Candidate.index"]},{"name":"val inlineData: InlineData? = null","description":"io.github.ugaikit.gemini4kt.Part.inlineData","location":"gemini4kt/io.github.ugaikit.gemini4kt/-part/inline-data.html","searchKeys":["inlineData","val inlineData: InlineData? = null","io.github.ugaikit.gemini4kt.Part.inlineData"]},{"name":"val inputTokenLimit: Int","description":"io.github.ugaikit.gemini4kt.Model.inputTokenLimit","location":"gemini4kt/io.github.ugaikit.gemini4kt/-model/input-token-limit.html","searchKeys":["inputTokenLimit","val inputTokenLimit: Int","io.github.ugaikit.gemini4kt.Model.inputTokenLimit"]},{"name":"val items: Schema","description":"io.github.ugaikit.gemini4kt.Schema.items","location":"gemini4kt/io.github.ugaikit.gemini4kt/-schema/items.html","searchKeys":["items","val items: Schema","io.github.ugaikit.gemini4kt.Schema.items"]},{"name":"val maxOutputTokens: Int","description":"io.github.ugaikit.gemini4kt.GenerationConfig.maxOutputTokens","location":"gemini4kt/io.github.ugaikit.gemini4kt/-generation-config/max-output-tokens.html","searchKeys":["maxOutputTokens","val maxOutputTokens: Int","io.github.ugaikit.gemini4kt.GenerationConfig.maxOutputTokens"]},{"name":"val mimeType: String","description":"io.github.ugaikit.gemini4kt.InlineData.mimeType","location":"gemini4kt/io.github.ugaikit.gemini4kt/-inline-data/mime-type.html","searchKeys":["mimeType","val mimeType: String","io.github.ugaikit.gemini4kt.InlineData.mimeType"]},{"name":"val model: String","description":"io.github.ugaikit.gemini4kt.EmbedContentRequest.model","location":"gemini4kt/io.github.ugaikit.gemini4kt/-embed-content-request/model.html","searchKeys":["model","val model: String","io.github.ugaikit.gemini4kt.EmbedContentRequest.model"]},{"name":"val models: List<Model>","description":"io.github.ugaikit.gemini4kt.ModelCollection.models","location":"gemini4kt/io.github.ugaikit.gemini4kt/-model-collection/models.html","searchKeys":["models","val models: List<Model>","io.github.ugaikit.gemini4kt.ModelCollection.models"]},{"name":"val name: String","description":"io.github.ugaikit.gemini4kt.FunctionDeclaration.name","location":"gemini4kt/io.github.ugaikit.gemini4kt/-function-declaration/name.html","searchKeys":["name","val name: String","io.github.ugaikit.gemini4kt.FunctionDeclaration.name"]},{"name":"val name: String","description":"io.github.ugaikit.gemini4kt.Model.name","location":"gemini4kt/io.github.ugaikit.gemini4kt/-model/name.html","searchKeys":["name","val name: String","io.github.ugaikit.gemini4kt.Model.name"]},{"name":"val nullable: Boolean","description":"io.github.ugaikit.gemini4kt.Schema.nullable","location":"gemini4kt/io.github.ugaikit.gemini4kt/-schema/nullable.html","searchKeys":["nullable","val nullable: Boolean","io.github.ugaikit.gemini4kt.Schema.nullable"]},{"name":"val outputTokenLimit: Int","description":"io.github.ugaikit.gemini4kt.Model.outputTokenLimit","location":"gemini4kt/io.github.ugaikit.gemini4kt/-model/output-token-limit.html","searchKeys":["outputTokenLimit","val outputTokenLimit: Int","io.github.ugaikit.gemini4kt.Model.outputTokenLimit"]},{"name":"val parameters: Schema","description":"io.github.ugaikit.gemini4kt.FunctionDeclaration.parameters","location":"gemini4kt/io.github.ugaikit.gemini4kt/-function-declaration/parameters.html","searchKeys":["parameters","val parameters: Schema","io.github.ugaikit.gemini4kt.FunctionDeclaration.parameters"]},{"name":"val parts: List<Part>","description":"io.github.ugaikit.gemini4kt.Content.parts","location":"gemini4kt/io.github.ugaikit.gemini4kt/-content/parts.html","searchKeys":["parts","val parts: List<Part>","io.github.ugaikit.gemini4kt.Content.parts"]},{"name":"val probability: HarmProbability","description":"io.github.ugaikit.gemini4kt.SafetyRating.probability","location":"gemini4kt/io.github.ugaikit.gemini4kt/-safety-rating/probability.html","searchKeys":["probability","val probability: HarmProbability","io.github.ugaikit.gemini4kt.SafetyRating.probability"]},{"name":"val promptFeedback: PromptFeedback","description":"io.github.ugaikit.gemini4kt.GenerateContentResponse.promptFeedback","location":"gemini4kt/io.github.ugaikit.gemini4kt/-generate-content-response/prompt-feedback.html","searchKeys":["promptFeedback","val promptFeedback: PromptFeedback","io.github.ugaikit.gemini4kt.GenerateContentResponse.promptFeedback"]},{"name":"val properties: Map<String, Schema>","description":"io.github.ugaikit.gemini4kt.Schema.properties","location":"gemini4kt/io.github.ugaikit.gemini4kt/-schema/properties.html","searchKeys":["properties","val properties: Map<String, Schema>","io.github.ugaikit.gemini4kt.Schema.properties"]},{"name":"val requests: List<EmbedContentRequest>","description":"io.github.ugaikit.gemini4kt.BatchEmbedRequest.requests","location":"gemini4kt/io.github.ugaikit.gemini4kt/-batch-embed-request/requests.html","searchKeys":["requests","val requests: List<EmbedContentRequest>","io.github.ugaikit.gemini4kt.BatchEmbedRequest.requests"]},{"name":"val required: List<String>","description":"io.github.ugaikit.gemini4kt.Schema.required","location":"gemini4kt/io.github.ugaikit.gemini4kt/-schema/required.html","searchKeys":["required","val required: List<String>","io.github.ugaikit.gemini4kt.Schema.required"]},{"name":"val role: String? = null","description":"io.github.ugaikit.gemini4kt.Content.role","location":"gemini4kt/io.github.ugaikit.gemini4kt/-content/role.html","searchKeys":["role","val role: String? = null","io.github.ugaikit.gemini4kt.Content.role"]},{"name":"val safetyRatings: List<SafetyRating>","description":"io.github.ugaikit.gemini4kt.Candidate.safetyRatings","location":"gemini4kt/io.github.ugaikit.gemini4kt/-candidate/safety-ratings.html","searchKeys":["safetyRatings","val safetyRatings: List<SafetyRating>","io.github.ugaikit.gemini4kt.Candidate.safetyRatings"]},{"name":"val safetyRatings: List<SafetyRating>","description":"io.github.ugaikit.gemini4kt.PromptFeedback.safetyRatings","location":"gemini4kt/io.github.ugaikit.gemini4kt/-prompt-feedback/safety-ratings.html","searchKeys":["safetyRatings","val safetyRatings: List<SafetyRating>","io.github.ugaikit.gemini4kt.PromptFeedback.safetyRatings"]},{"name":"val safetySettings: List<SafetySetting>","description":"io.github.ugaikit.gemini4kt.GenerateContentRequest.safetySettings","location":"gemini4kt/io.github.ugaikit.gemini4kt/-generate-content-request/safety-settings.html","searchKeys":["safetySettings","val safetySettings: List<SafetySetting>","io.github.ugaikit.gemini4kt.GenerateContentRequest.safetySettings"]},{"name":"val stopSequences: List<String>","description":"io.github.ugaikit.gemini4kt.GenerationConfig.stopSequences","location":"gemini4kt/io.github.ugaikit.gemini4kt/-generation-config/stop-sequences.html","searchKeys":["stopSequences","val stopSequences: List<String>","io.github.ugaikit.gemini4kt.GenerationConfig.stopSequences"]},{"name":"val supportedGenerationMethods: List<String>","description":"io.github.ugaikit.gemini4kt.Model.supportedGenerationMethods","location":"gemini4kt/io.github.ugaikit.gemini4kt/-model/supported-generation-methods.html","searchKeys":["supportedGenerationMethods","val supportedGenerationMethods: List<String>","io.github.ugaikit.gemini4kt.Model.supportedGenerationMethods"]},{"name":"val taskType: TaskType? = null","description":"io.github.ugaikit.gemini4kt.EmbedContentRequest.taskType","location":"gemini4kt/io.github.ugaikit.gemini4kt/-embed-content-request/task-type.html","searchKeys":["taskType","val taskType: TaskType? = null","io.github.ugaikit.gemini4kt.EmbedContentRequest.taskType"]},{"name":"val temperature: Double","description":"io.github.ugaikit.gemini4kt.GenerationConfig.temperature","location":"gemini4kt/io.github.ugaikit.gemini4kt/-generation-config/temperature.html","searchKeys":["temperature","val temperature: Double","io.github.ugaikit.gemini4kt.GenerationConfig.temperature"]},{"name":"val temperature: Double? = null","description":"io.github.ugaikit.gemini4kt.Model.temperature","location":"gemini4kt/io.github.ugaikit.gemini4kt/-model/temperature.html","searchKeys":["temperature","val temperature: Double? = null","io.github.ugaikit.gemini4kt.Model.temperature"]},{"name":"val text: String? = null","description":"io.github.ugaikit.gemini4kt.Part.text","location":"gemini4kt/io.github.ugaikit.gemini4kt/-part/text.html","searchKeys":["text","val text: String? = null","io.github.ugaikit.gemini4kt.Part.text"]},{"name":"val threshold: Threshold","description":"io.github.ugaikit.gemini4kt.SafetySetting.threshold","location":"gemini4kt/io.github.ugaikit.gemini4kt/-safety-setting/threshold.html","searchKeys":["threshold","val threshold: Threshold","io.github.ugaikit.gemini4kt.SafetySetting.threshold"]},{"name":"val title: String? = null","description":"io.github.ugaikit.gemini4kt.EmbedContentRequest.title","location":"gemini4kt/io.github.ugaikit.gemini4kt/-embed-content-request/title.html","searchKeys":["title","val title: String? = null","io.github.ugaikit.gemini4kt.EmbedContentRequest.title"]},{"name":"val topK: Int","description":"io.github.ugaikit.gemini4kt.GenerationConfig.topK","location":"gemini4kt/io.github.ugaikit.gemini4kt/-generation-config/top-k.html","searchKeys":["topK","val topK: Int","io.github.ugaikit.gemini4kt.GenerationConfig.topK"]},{"name":"val topK: Int? = null","description":"io.github.ugaikit.gemini4kt.Model.topK","location":"gemini4kt/io.github.ugaikit.gemini4kt/-model/top-k.html","searchKeys":["topK","val topK: Int? = null","io.github.ugaikit.gemini4kt.Model.topK"]},{"name":"val topP: Double","description":"io.github.ugaikit.gemini4kt.GenerationConfig.topP","location":"gemini4kt/io.github.ugaikit.gemini4kt/-generation-config/top-p.html","searchKeys":["topP","val topP: Double","io.github.ugaikit.gemini4kt.GenerationConfig.topP"]},{"name":"val topP: Double? = null","description":"io.github.ugaikit.gemini4kt.Model.topP","location":"gemini4kt/io.github.ugaikit.gemini4kt/-model/top-p.html","searchKeys":["topP","val topP: Double? = null","io.github.ugaikit.gemini4kt.Model.topP"]},{"name":"val totalTokens: Int","description":"io.github.ugaikit.gemini4kt.TotalTokens.totalTokens","location":"gemini4kt/io.github.ugaikit.gemini4kt/-total-tokens/total-tokens.html","searchKeys":["totalTokens","val totalTokens: Int","io.github.ugaikit.gemini4kt.TotalTokens.totalTokens"]},{"name":"val type: String","description":"io.github.ugaikit.gemini4kt.Schema.type","location":"gemini4kt/io.github.ugaikit.gemini4kt/-schema/type.html","searchKeys":["type","val type: String","io.github.ugaikit.gemini4kt.Schema.type"]},{"name":"val values: List<Double>","description":"io.github.ugaikit.gemini4kt.Values.values","location":"gemini4kt/io.github.ugaikit.gemini4kt/-values/values.html","searchKeys":["values","val values: List<Double>","io.github.ugaikit.gemini4kt.Values.values"]},{"name":"val version: String","description":"io.github.ugaikit.gemini4kt.Model.version","location":"gemini4kt/io.github.ugaikit.gemini4kt/-model/version.html","searchKeys":["version","val version: String","io.github.ugaikit.gemini4kt.Model.version"]}]
